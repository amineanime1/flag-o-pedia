import { shuffleArray } from './gameUtils';

interface CountryFlag {
  code: string;
  name: string;
  aliases?: string[]; // Add aliases for countries
}

// World flags data
export const worldFlagsList: CountryFlag[] = [
  { code: 'af', name: 'Afghanistan' },
  { code: 'ax', name: 'Åland Islands' },
  { code: 'al', name: 'Albania' },
  { code: 'dz', name: 'Algeria' },
  { code: 'as', name: 'American Samoa' },
  { code: 'ad', name: 'Andorra' },
  { code: 'ao', name: 'Angola' },
  { code: 'ai', name: 'Anguilla' },
  { code: 'aq', name: 'Antarctica' },
  { code: 'ag', name: 'Antigua and Barbuda' },
  { code: 'ar', name: 'Argentina' },
  { code: 'am', name: 'Armenia' },
  { code: 'aw', name: 'Aruba' },
  { code: 'au', name: 'Australia' },
  { code: 'at', name: 'Austria' },
  { code: 'az', name: 'Azerbaijan' },
  { code: 'bs', name: 'Bahamas' },
  { code: 'bh', name: 'Bahrain' },
  { code: 'bd', name: 'Bangladesh' },
  { code: 'bb', name: 'Barbados' },
  { code: 'by', name: 'Belarus' },
  { code: 'be', name: 'Belgium' },
  { code: 'bz', name: 'Belize' },
  { code: 'bj', name: 'Benin' },
  { code: 'bm', name: 'Bermuda' },
  { code: 'bt', name: 'Bhutan' },
  { code: 'bo', name: 'Bolivia', aliases: ['Plurinational State of Bolivia'] },
  { code: 'ba', name: 'Bosnia and Herzegovina' },
  { code: 'bw', name: 'Botswana' },
  { code: 'bv', name: 'Bouvet Island' },
  { code: 'br', name: 'Brazil' },
  { code: 'io', name: 'British Indian Ocean Territory' },
  { code: 'vg', name: 'British Virgin Islands', aliases: ['BVI'] },
  { code: 'bn', name: 'Brunei' },
  { code: 'bg', name: 'Bulgaria' },
  { code: 'bf', name: 'Burkina Faso' },
  { code: 'bi', name: 'Burundi' },
  { code: 'kh', name: 'Cambodia' },
  { code: 'cm', name: 'Cameroon' },
  { code: 'ca', name: 'Canada' },
  { code: 'cv', name: 'Cape Verde' },
  { code: 'bq', name: 'Caribbean Netherlands' },
  { code: 'ky', name: 'Cayman Islands' },
  { code: 'cf', name: 'Central African Republic' },
  { code: 'td', name: 'Chad' },
  { code: 'cl', name: 'Chile' },
  { code: 'cn', name: 'China' },
  { code: 'cx', name: 'Christmas Island' },
  { code: 'cc', name: 'Cocos Islands' },
  { code: 'co', name: 'Colombia' },
  { code: 'km', name: 'Comoros' },
  { code: 'cg', name: 'Republic of the Congo', aliases: ['Congo-Brazzaville'] },
  { code: 'cd', name: 'DR Congo', aliases: ['Democratic Republic of the Congo'] },
  { code: 'ck', name: 'Cook Islands' },
  { code: 'cr', name: 'Costa Rica' },
  { code: 'ci', name: "Côte d'Ivoire", aliases: ['Ivory Coast'] },
  { code: 'hr', name: 'Croatia' },
  { code: 'cu', name: 'Cuba' },
  { code: 'cw', name: 'Curaçao' },
  { code: 'cy', name: 'Cyprus' },
  { code: 'cz', name: 'Czechia', aliases: ['Czech Republic'] },
  { code: 'dk', name: 'Denmark' },
  { code: 'dj', name: 'Djibouti' },
  { code: 'dm', name: 'Dominica' },
  { code: 'do', name: 'Dominican Republic' },
  { code: 'ec', name: 'Ecuador' },
  { code: 'eg', name: 'Egypt' },
  { code: 'sv', name: 'El Salvador' },
  { code: 'gb-eng', name: 'England' },
  { code: 'gq', name: 'Equatorial Guinea' },
  { code: 'er', name: 'Eritrea' },
  { code: 'ee', name: 'Estonia' },
  { code: 'sz', name: 'Eswatini', aliases: ['Swaziland'] },
  { code: 'et', name: 'Ethiopia' },
  { code: 'fk', name: 'Falkland Islands' },
  { code: 'fo', name: 'Faroe Islands' },
  { code: 'fj', name: 'Fiji' },
  { code: 'fi', name: 'Finland' },
  { code: 'fr', name: 'France' },
  { code: 'gf', name: 'French Guiana' },
  { code: 'pf', name: 'French Polynesia' },
  { code: 'tf', name: 'French Southern Territories' },
  { code: 'ga', name: 'Gabon' },
  { code: 'gm', name: 'Gambia' },
  { code: 'ge', name: 'Georgia' },
  { code: 'de', name: 'Germany' },
  { code: 'gh', name: 'Ghana' },
  { code: 'gi', name: 'Gibraltar' },
  { code: 'gr', name: 'Greece' },
  { code: 'gl', name: 'Greenland' },
  { code: 'gd', name: 'Grenada' },
  { code: 'gp', name: 'Guadeloupe' },
  { code: 'gu', name: 'Guam' },
  { code: 'gt', name: 'Guatemala' },
  { code: 'gg', name: 'Guernsey' },
  { code: 'gn', name: 'Guinea' },
  { code: 'gw', name: 'Guinea-Bissau' },
  { code: 'gy', name: 'Guyana' },
  { code: 'ht', name: 'Haiti' },
  { code: 'hm', name: 'Heard Island and McDonald Islands' },
  { code: 'hn', name: 'Honduras' },
  { code: 'hk', name: 'Hong Kong' },
  { code: 'hu', name: 'Hungary' },
  { code: 'is', name: 'Iceland' },
  { code: 'in', name: 'India' },
  { code: 'id', name: 'Indonesia' },
  { code: 'ir', name: 'Iran', aliases: ['Islamic Republic of Iran'] },
  { code: 'iq', name: 'Iraq' },
  { code: 'ie', name: 'Ireland' },
  { code: 'im', name: 'Isle of Man' },
  { code: 'il', name: 'Israel' },
  { code: 'it', name: 'Italy' },
  { code: 'jm', name: 'Jamaica' },
  { code: 'jp', name: 'Japan' },
  { code: 'je', name: 'Jersey' },
  { code: 'jo', name: 'Jordan' },
  { code: 'kz', name: 'Kazakhstan' },
  { code: 'ke', name: 'Kenya' },
  { code: 'ki', name: 'Kiribati' },
  { code: 'kp', name: 'North Korea', aliases: ['DPR Korea'] },
  { code: 'kr', name: 'South Korea', aliases: ['Republic of Korea', 'Korea, Republic of'] },
  { code: 'xk', name: 'Kosovo' },
  { code: 'kw', name: 'Kuwait' },
  { code: 'kg', name: 'Kyrgyzstan' },
  { code: 'la', name: 'Laos' },
  { code: 'lv', name: 'Latvia' },
  { code: 'lb', name: 'Lebanon' },
  { code: 'ls', name: 'Lesotho' },
  { code: 'lr', name: 'Liberia' },
  { code: 'ly', name: 'Libya' },
  { code: 'li', name: 'Liechtenstein' },
  { code: 'lt', name: 'Lithuania' },
  { code: 'lu', name: 'Luxembourg' },
  { code: 'mo', name: 'Macau', aliases: ['Macao'] },
  { code: 'mg', name: 'Madagascar' },
  { code: 'mw', name: 'Malawi' },
  { code: 'my', name: 'Malaysia' },
  { code: 'mv', name: 'Maldives' },
  { code: 'ml', name: 'Mali' },
  { code: 'mt', name: 'Malta' },
  { code: 'mh', name: 'Marshall Islands' },
  { code: 'mq', name: 'Martinique' },
  { code: 'mr', name: 'Mauritania' },
  { code: 'mu', name: 'Mauritius' },
  { code: 'yt', name: 'Mayotte' },
  { code: 'mx', name: 'Mexico' },
  { code: 'fm', name: 'Micronesia', aliases: ['Federated States of Micronesia', 'FSM'] },
  { code: 'md', name: 'Moldova', aliases: ['Republic of Moldova'] },
  { code: 'mc', name: 'Monaco' },
  { code: 'mn', name: 'Mongolia' },
  { code: 'me', name: 'Montenegro' },
  { code: 'ms', name: 'Montserrat' },
  { code: 'ma', name: 'Morocco' },
  { code: 'mz', name: 'Mozambique' },
  { code: 'mm', name: 'Myanmar', aliases: ['Burma'] },
  { code: 'na', name: 'Namibia' },
  { code: 'nr', name: 'Nauru' },
  { code: 'np', name: 'Nepal' },
  { code: 'nl', name: 'Netherlands' },
  { code: 'nc', name: 'New Caledonia' },
  { code: 'nz', name: 'New Zealand' },
  { code: 'ni', name: 'Nicaragua' },
  { code: 'ne', name: 'Niger' },
  { code: 'ng', name: 'Nigeria' },
  { code: 'nu', name: 'Niue' },
  { code: 'nf', name: 'Norfolk Island' },
  { code: 'mk', name: 'North Macedonia' },
  { code: 'gb-nir', name: 'Northern Ireland' },
  { code: 'mp', name: 'Northern Mariana Islands' },
  { code: 'no', name: 'Norway' },
  { code: 'om', name: 'Oman' },
  { code: 'pk', name: 'Pakistan' },
  { code: 'pw', name: 'Palau' },
  { code: 'ps', name: 'Palestine' },
  { code: 'pa', name: 'Panama' },
  { code: 'pg', name: 'Papua New Guinea' },
  { code: 'py', name: 'Paraguay' },
  { code: 'pe', name: 'Peru' },
  { code: 'ph', name: 'Philippines' },
  { code: 'pn', name: 'Pitcairn Islands' },
  { code: 'pl', name: 'Poland' },
  { code: 'pt', name: 'Portugal' },
  { code: 'pr', name: 'Puerto Rico' },
  { code: 'qa', name: 'Qatar' },
  { code: 're', name: 'Réunion', aliases: ['Reunion'] },
  { code: 'ro', name: 'Romania' },
  { code: 'ru', name: 'Russia', aliases: ['Russian Federation'] },
  { code: 'rw', name: 'Rwanda' },
  { code: 'bl', name: 'Saint Barthélemy' },
  { code: 'sh', name: 'Saint Helena, Ascension and Tristan da Cunha' },
  { code: 'kn', name: 'Saint Kitts and Nevis' },
  { code: 'lc', name: 'Saint Lucia' },
  { code: 'mf', name: 'Saint Martin' },
  { code: 'pm', name: 'Saint Pierre and Miquelon' },
  { code: 'vc', name: 'Saint Vincent and the Grenadines' },
  { code: 'ws', name: 'Samoa' },
  { code: 'sm', name: 'San Marino' },
  { code: 'st', name: 'São Tomé and Príncipe' },
  { code: 'sa', name: 'Saudi Arabia' },
  { code: 'gb-sct', name: 'Scotland' },
  { code: 'sn', name: 'Senegal' },
  { code: 'rs', name: 'Serbia' },
  { code: 'sc', name: 'Seychelles' },
  { code: 'sl', name: 'Sierra Leone' },
  { code: 'sg', name: 'Singapore' },
  { code: 'sx', name: 'Sint Maarten' },
  { code: 'sk', name: 'Slovakia' },
  { code: 'si', name: 'Slovenia' },
  { code: 'sb', name: 'Solomon Islands' },
  { code: 'so', name: 'Somalia' },
  { code: 'za', name: 'South Africa' },
  { code: 'gs', name: 'South Georgia' },
  { code: 'ss', name: 'South Sudan' },
  { code: 'es', name: 'Spain' },
  { code: 'lk', name: 'Sri Lanka' },
  { code: 'sd', name: 'Sudan' },
  { code: 'sr', name: 'Suriname' },
  { code: 'sj', name: 'Svalbard and Jan Mayen' },
  { code: 'se', name: 'Sweden' },
  { code: 'ch', name: 'Switzerland' },
  { code: 'sy', name: 'Syria', aliases: ['Syrian Arab Republic'] },
  { code: 'tw', name: 'Taiwan' },
  { code: 'tj', name: 'Tajikistan' },
  { code: 'tz', name: 'Tanzania', aliases: ['United Republic of Tanzania'] },
  { code: 'th', name: 'Thailand' },
  { code: 'tl', name: 'Timor-Leste' },
  { code: 'tg', name: 'Togo' },
  { code: 'tk', name: 'Tokelau' },
  { code: 'to', name: 'Tonga' },
  { code: 'tt', name: 'Trinidad and Tobago' },
  { code: 'tn', name: 'Tunisia' },
  { code: 'tr', name: 'Turkey' },
  { code: 'tm', name: 'Turkmenistan' },
  { code: 'tc', name: 'Turks and Caicos Islands' },
  { code: 'tv', name: 'Tuvalu' },
  { code: 'ug', name: 'Uganda' },
  { code: 'ua', name: 'Ukraine' },
  { code: 'ae', name: 'United Arab Emirates', aliases: ['UAE'] },
  { code: 'gb', name: 'United Kingdom', aliases: ['UK', 'Britain', 'Great Britain'] },
  { code: 'us', name: 'United States', aliases: ['USA', 'America', 'United States of America'] },
  { code: 'um', name: 'United States Minor Outlying Islands' },
  { code: 'vi', name: 'United States Virgin Islands', aliases: ['USVI'] },
  { code: 'uy', name: 'Uruguay' },
  { code: 'uz', name: 'Uzbekistan' },
  { code: 'vu', name: 'Vanuatu' },
  { code: 'va', name: 'Vatican City', aliases: ['Holy See'] },
  { code: 've', name: 'Venezuela', aliases: ['Bolivarian Republic of Venezuela'] },
  { code: 'vn', name: 'Vietnam' },
  { code: 'gb-wls', name: 'Wales' },
  { code: 'wf', name: 'Wallis and Futuna' },
  { code: 'eh', name: 'Western Sahara' },
  { code: 'ye', name: 'Yemen' },
  { code: 'zm', name: 'Zambia' },
  { code: 'zw', name: 'Zimbabwe' }
];


// US states data
export const usStatesList: CountryFlag[] = [
  { code: 'us-al', name: 'Alabama', aliases: ['AL'] },
  { code: 'us-ak', name: 'Alaska', aliases: ['AK'] },
  { code: 'us-az', name: 'Arizona', aliases: ['AZ'] },
  { code: 'us-ar', name: 'Arkansas', aliases: ['AR'] },
  { code: 'us-ca', name: 'California', aliases: ['CA'] },
  { code: 'us-co', name: 'Colorado', aliases: ['CO'] },
  { code: 'us-ct', name: 'Connecticut', aliases: ['CT'] },
  { code: 'us-de', name: 'Delaware', aliases: ['DE'] },
  { code: 'us-fl', name: 'Florida', aliases: ['FL'] },
  { code: 'us-ga', name: 'Georgia', aliases: ['GA'] },
  { code: 'us-hi', name: 'Hawaii', aliases: ['HI'] },
  { code: 'us-id', name: 'Idaho', aliases: ['ID'] },
  { code: 'us-il', name: 'Illinois', aliases: ['IL'] },
  { code: 'us-in', name: 'Indiana', aliases: ['IN'] },
  { code: 'us-ia', name: 'Iowa', aliases: ['IA'] },
  { code: 'us-ks', name: 'Kansas', aliases: ['KS'] },
  { code: 'us-ky', name: 'Kentucky', aliases: ['KY'] },
  { code: 'us-la', name: 'Louisiana', aliases: ['LA'] },
  { code: 'us-me', name: 'Maine', aliases: ['ME'] },
  { code: 'us-md', name: 'Maryland', aliases: ['MD'] },
  { code: 'us-ma', name: 'Massachusetts', aliases: ['MA'] },
  { code: 'us-mi', name: 'Michigan', aliases: ['MI'] },
  { code: 'us-mn', name: 'Minnesota', aliases: ['MN'] },
  { code: 'us-ms', name: 'Mississippi', aliases: ['MS'] },
  { code: 'us-mo', name: 'Missouri', aliases: ['MO'] },
  { code: 'us-mt', name: 'Montana', aliases: ['MT'] },
  { code: 'us-ne', name: 'Nebraska', aliases: ['NE'] },
  { code: 'us-nv', name: 'Nevada', aliases: ['NV'] },
  { code: 'us-nh', name: 'New Hampshire', aliases: ['NH'] },
  { code: 'us-nj', name: 'New Jersey', aliases: ['NJ'] },
  { code: 'us-nm', name: 'New Mexico', aliases: ['NM'] },
  { code: 'us-ny', name: 'New York', aliases: ['NY'] },
  { code: 'us-nc', name: 'North Carolina', aliases: ['NC'] },
  { code: 'us-nd', name: 'North Dakota', aliases: ['ND'] },
  { code: 'us-oh', name: 'Ohio', aliases: ['OH'] },
  { code: 'us-ok', name: 'Oklahoma', aliases: ['OK'] },
  { code: 'us-or', name: 'Oregon', aliases: ['OR'] },
  { code: 'us-pa', name: 'Pennsylvania', aliases: ['PA'] },
  { code: 'us-ri', name: 'Rhode Island', aliases: ['RI'] },
  { code: 'us-sc', name: 'South Carolina', aliases: ['SC'] },
  { code: 'us-sd', name: 'South Dakota', aliases: ['SD'] },
  { code: 'us-tn', name: 'Tennessee', aliases: ['TN'] },
  { code: 'us-tx', name: 'Texas', aliases: ['TX'] },
  { code: 'us-ut', name: 'Utah', aliases: ['UT'] },
  { code: 'us-vt', name: 'Vermont', aliases: ['VT'] },
  { code: 'us-va', name: 'Virginia', aliases: ['VA'] },
  { code: 'us-wa', name: 'Washington', aliases: ['WA'] },
  { code: 'us-wv', name: 'West Virginia', aliases: ['WV'] },
  { code: 'us-wi', name: 'Wisconsin', aliases: ['WI'] },
  { code: 'us-wy', name: 'Wyoming', aliases: ['WY'] }
];

// Add helper function for string normalization
export function normalizeString(str: string): string {
  return str
    .toLowerCase()
    .normalize("NFD")
    .replace(/[\u0300-\u036f]/g, "") // Remove accents
    .replace(/[-]/g, " ") // Replace hyphens with spaces
    .replace(/\s+/g, " ") // Normalize spaces
    .trim();
}

// Update the generateQuestions function to include normalized versions
export function generateQuestions(mode: 'world' | 'us', count: number) {
  const sourceList = mode === 'world' ? worldFlagsList : usStatesList;
  const shuffledFlags = shuffleArray(sourceList);
  const selectedFlags = shuffledFlags.slice(0, count);

  return selectedFlags.map(flag => {
    // Get remaining flags (excluding current flag)
    const otherFlags = sourceList.filter(f => f.code !== flag.code);
    // Shuffle and take 3 random flags for wrong answers
    const wrongAnswers = shuffleArray(otherFlags).slice(0, 3);
    // Create and shuffle all options
    const options = shuffleArray([flag.name, ...wrongAnswers.map(f => f.name)]);

    return {
      flagUrl: `https://flagcdn.com/w640/${flag.code}.png`,
      options,
      correctAnswer: flag.name,
      aliases: [...(flag.aliases || []), normalizeString(flag.name)],
      code: flag.code
    };
  });
}
